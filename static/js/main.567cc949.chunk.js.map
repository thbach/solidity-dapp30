{"version":3,"sources":["img/challenge.png","img/fireSmall.png","img/waterSmall.png","img/plantSmall.png","img/fireMed.png","img/waterMed.png","img/plantMed.png","Components/Header.js","Components/ModalCentered.js","Components/CurrentGames.js","Components/CompletedGames.js","App.js","utils.js","index.js"],"names":["module","exports","Header","props","Navbar","Text","href","address","Collapse","className","balance","houseFee","ModalCentered","Modal","size","aria-labelledby","centered","closeButton","Title","id","title","Body","body","Footer","Button","onClick","onHide","web3","Web3","CurrentGame","game","data","bet","betInEth","players","name","undefined","utils","fromWei","Card","style","width","Img","variant","src","ChallengImg","onClickType","onClickSubmit","slice","CompletedGames","winner","move1","move2","winDrawLose","Row","Col","FireImgSML","WaterImgSML","PlantImgSML","App","useState","setWeb3","accounts","setAccounts","contract","setContract","contractReady","setContractReady","setBalance","setHouseFee","state","games","setGames","move","setMove","setBet","betInETH","setBetInETH","setChallengeBet","createShow","setCreateShow","modalShow","setModalShow","modalTitle","setModalTitle","useEffect","a","Promise","resolve","reject","window","addEventListener","ethereum","enable","console","log","provider","providers","HttpProvider","eth","getAccounts","net","getId","networkId","deployedNetwork","RockPaperScissors","networks","Contract","abi","methods","call","init","on","isReady","_address","updateGames","parseInt","gameId","i","getGame","result","all","moves","value","push","getBalance","e","preventDefault","target","elements","salt","Math","floor","random","createGame","send","from","setBetAmounts","challengeBet","joinAndEndGame","toString","Jumbotron","Alert","show","Form","onSubmit","sm","Control","type","defaultValue","FireImgMED","alt","WaterImgMED","PlantImgMED","Container","length","reverse","map","index","key","CurrentGames","joinGameCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.567cc949.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/challenge.6f6b7187.png\";","module.exports = __webpack_public_path__ + \"static/media/fireSmall.601ecfff.png\";","module.exports = __webpack_public_path__ + \"static/media/waterSmall.e921b40e.png\";","module.exports = __webpack_public_path__ + \"static/media/plantSmall.bdc991a8.png\";","module.exports = __webpack_public_path__ + \"static/media/fireMed.5a5daaf3.png\";","module.exports = __webpack_public_path__ + \"static/media/waterMed.ec223c94.png\";","module.exports = __webpack_public_path__ + \"static/media/plantMed.1ec3b69c.png\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\n\nconst Header = (props) => (\n  <>\n    <Navbar>\n      <Navbar.Text href=\"#home\">Contract address: {props.address}</Navbar.Text>\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text>\n          Contract Balance: {props.balance} ETH | House fee: {props.houseFee} %\n        </Navbar.Text>\n      </Navbar.Collapse>\n    </Navbar>\n  </>\n  )\n\nexport default Header;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n\n\nconst ModalCentered = (props) => (\n  <Modal\n    {...props}\n    size=\"lg\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n    <Modal.Header closeButton>\n      <Modal.Title id=\"contained-modal-title-vcenter\">{props.title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      <p>{props.body}</p>\n      <p>Sign the Metamask transaction. Close this Window. Then wait for next block - 15 seconds</p>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button onClick={props.onHide}>Close</Button>\n    </Modal.Footer>\n  </Modal>\n)\n\nexport default ModalCentered;","import React, { useState, useEffect }from 'react';\nimport Web3 from \"web3\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ChallengImg from '../img/challenge.png';\n\nconst web3 = new Web3();\nfunction CurrentGame(props) {\n\n    // const betInEth = await Web3.utils.fromWei(props.data.bet.toString(10), 'ether');\n\n    // const [id, setid] = useState(undefined);\n    // const [bet, setBet] = useState(undefined);\n    // const [betInETH, setBetInETH] = useState(undefined);\n\n    const game = {\n        id: props.data.id,\n        bet: props.data.bet,\n        betInEth: '0',\n        players: props.data.players,\n        name: props.data.name\n    }\n\n    if(game.bet !== undefined) {\n        game.betInEth = web3.utils.fromWei(game.bet, 'ether');\n    }\n\n    if(game.players == undefined || game.name == undefined || game.bet == undefined) {\n        return (<></>);\n    }\n\n    return (\n        <>\n          <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src={ChallengImg} />\n              <Card.Body>\n              <Card.Title>Challenge {game.name} for </Card.Title>\n              <Card.Title>{game.betInEth} ETH </Card.Title>\n              <h5>Choose your power</h5>\n              <Card.Text>\n                  <Button variant=\"warning\" onClick={() => props.onClickType('1')}>Fire</Button>{' '}\n                  <Button variant=\"info\" onClick={() => props.onClickType('2')}>Water</Button>{' '}\n                  <Button variant=\"success\" onClick={() => props.onClickType('3')}>Plant</Button>{' '}\n              </Card.Text>\n              <Button variant=\"danger\" onClick={() => props.onClickSubmit(game)}>FIGHT!</Button>\n              </Card.Body>\n              <Card.Footer><small className=\"text-muted\">{`Player: ${game.players[0].slice(0, 10)}.....${game.players[0].slice(-10)}`}</small></Card.Footer>\n          </Card>\n        </>\n    )\n}\nexport default CurrentGame;","import React, { useState, useEffect }from 'react';\nimport Web3 from \"web3\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ChallengImg from '../img/challenge.png';\nimport FireImgSML from '../img/fireSmall.png';\nimport WaterImgSML from '../img/waterSmall.png';\nimport PlantImgSML from '../img/plantSmall.png';\n\nconst web3 = new Web3();\n\nfunction CompletedGames(props) {\n\n    // console.log(props);\n    const game = {\n        bet: props.data.bet,\n        betInEth: '0',\n        winner: props.data.winner,\n        players: props.data.players,\n        name: props.data.name,\n        move1: props.data.move1,\n        move2: props.data.move2\n    }\n\n    if(game.bet !== undefined) {\n        game.betInEth = web3.utils.fromWei(game.bet, 'ether');\n    }\n\n    if(game.players == undefined || game.name == undefined || game.bet == undefined) {\n        return (<></>);\n    }\n\n    let winDrawLose = \"LOSES\";\n\n    if (game.move1 === game.move2) {\n        winDrawLose = \"DRAWS\";\n    }\n\n    if (game.move1 == 3 && game.move2 == 2) {\n        winDrawLose = \"WINS\";\n    }\n\n    if (game.move1 == 1 && game.move2 == 3) {\n        winDrawLose = \"WINS\";\n    }\n\n    if (game.move1 == 2 && game.move2 == 1) {\n        winDrawLose = \"WINS\";\n    }\n\n\n\n\n    return (\n        <>\n            <Card style={{ width: '18rem' }}>\n                <Row>\n                    <Col>\n                        <Card.Img variant=\"top\" src={(game.move1 == 1 ? FireImgSML : game.move1 == 2 ? WaterImgSML : PlantImgSML)} />\n                    </Col>\n                    <Col>\n                        <Card.Img variant=\"top\" src={(game.move2 == 1 ? FireImgSML : game.move2 == 2 ? WaterImgSML : PlantImgSML)} />\n                    </Col>\n                </Row>\n                <Card.Body>\n                    <Card.Title>{game.name} {winDrawLose}! </Card.Title>\n                    <Card.Title>{game.betInEth} ETH </Card.Title>\n                </Card.Body>\n                <Card.Footer><small className=\"text-muted\">{`Player: ${game.players[0].slice(0, 10)}.....${game.players[0].slice(-10)}`}</small></Card.Footer>\n            </Card>\n        </>\n    )\n}\nexport default CompletedGames;","import React, { useEffect, useState } from 'react';\nimport RockPaperScissors from './contracts/RockPaperScissors.json';\nimport { getWeb3 } from './utils.js';\n\n\nimport Header from './Components/Header';\nimport ModalCentered from './Components/ModalCentered';\nimport CurrentGames from './Components/CurrentGames';\nimport CompletedGames from './Components/CompletedGames';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\n\nimport FireImgMED from './img/fireMed.png';\nimport WaterImgMED from './img/waterMed.png';\nimport PlantImgMED from './img/plantMed.png';\n\n\n\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [contractReady, setContractReady] = useState(false);\n  const [balance, setBalance] = useState(undefined);\n  const [houseFee, setHouseFee] = useState(undefined);\n  const [games, setGames] = useState([{state: '0'}]);\n  const [moves, setMoves] = useState();\n  const [move, setMove] = useState('1');\n  const [bet, setBet] = useState('1');\n  const [betInETH, setBetInETH] = useState('1');\n  const [challengeBet, setChallengeBet] = useState('1');\n\n  const [createShow, setCreateShow] = useState(true);\n  const [modalShow, setModalShow] = useState(false);\n  const [modalTitle, setModalTitle] = useState('Create Game');\n\n  const [temp, setTemp] = useState('temp');\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = RockPaperScissors.networks[networkId];\n        const contract = new web3.eth.Contract(\n          RockPaperScissors.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n        const houseFee = await contract.methods.houseFee().call();\n        setContractReady(true);\n      } catch (e) {\n        console.log(e)\n        setContractReady(false);\n      }\n\n\n\n      setWeb3(web3);\n      setAccounts(accounts);\n      setContract(contract);\n      setHouseFee(houseFee);\n    }\n    init();\n    window.ethereum.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n  }, []);\n\n  const isReady = () => {\n    return (\n      typeof contract !== 'undefined'\n      && typeof web3 !== 'undefined'\n      && typeof accounts !== 'undefined'\n      && contract._address !== 'undefined'\n    );\n  }\n\n  useEffect(() => {\n    if(isReady() && contractReady) {\n      updateGames();\n      getBalance();\n    }\n  }, [accounts, contract, web3]);\n\n  async function updateGames() {\n    const gameId = parseInt(await contract.methods.gameId().call());\n    if(gameId < 1) return;\n\n    const games = [];\n\n    for(let i = 0; i < gameId; i ++ ) {\n      let result = await contract.methods.getGame(i).call();\n      let [move1, move2] = await Promise.all([\n        contract.methods.moves(i, result[2][0]).call(),\n        contract.methods.moves(i, result[2][1]).call()\n      ]);\n      let game = {\n        id: result[0],\n        bet: result[1],\n        players: result[2],\n        winner: result[3],\n        state: result[4],\n        name: result[5],\n        move1: move1.value,\n        move2: move2.value\n      };\n      games.push(game);\n    }\n    setGames(games);\n    getBalance();\n  }\n\n  async function createGame(e) {\n    e.preventDefault();\n    const name = e.target.elements[0].value;\n\n    setModalShow(true);\n    setModalTitle('Create Game');\n    const salt = Math.floor(Math.random() * 1000);\n    await contract.methods\n      .createGame(name, move, salt)\n      .send({from: accounts[0], value: bet});\n    await updateGames();\n  };\n\n  async function getBalance() {\n    const balance = await web3.eth.getBalance(contract._address);\n    setBalance(balance);\n  };\n\n  function setBetAmounts(bet) {\n    let betInETH = '0.0';\n    setBet(bet);\n    if(web3 !== undefined) {\n      betInETH = web3.utils.fromWei(bet, 'ether');\n    }\n    setBetInETH(betInETH);\n  }\n\n  async function joinGameCallback(data) {\n\n\n    const salt = Math.floor(Math.random() * 1000);\n    const gameId = data.id;\n    const challengeBet = data.bet;\n    setChallengeBet(challengeBet);\n    setBetInETH(data.betInEth)\n    setModalShow(true);\n    setModalTitle(`Challenge ${data.name}`);\n\n    await contract.methods\n      .joinAndEndGame(gameId, move, salt)\n      .send({from: accounts[0], value: challengeBet});\n    await updateGames();\n  }\n\n  return (\n    <>\n      <Header\n         address={contract !== undefined ? contract._address : \"Sign into Metamask and Switch to KOVAN testnet\"}\n         balance={web3 !== undefined && balance !== undefined ? web3.utils.fromWei(balance.toString(), 'ether') : '0'}\n         houseFee={houseFee}\n      />\n\n      <Jumbotron>\n        <h1>Monster Battle</h1>\n        <h5>Run on KOVAN testnet. Install and allow metamask to read your address (hit accept) </h5>\n        <p>\n          Battle monsters on the blockchain. Create a game and wait for other player to challenge or take a look at the Current Games.\n          Wait 10 seconds for confirmation per metamask interaction. FIRE beats PLANT, PLANT beats WATER, WATER beats FIRE.\n        </p>\n        <Alert show={createShow} variant=\"success\">\n          <Row>\n            <Col>\n            <Form onSubmit={e => createGame(e)}>\n             <h5>Give your fighter a name</h5>\n              <Col sm={5}>\n                <p><Form.Control className=\"my-1\" size=\"sm\" type=\"text\" defaultValue=\"Bob\" /></p>\n              </Col>\n              <h5>Choose his base power</h5>\n              <p>\n                <Button variant=\"warning\" onClick={() => setMove('1')}>Fire</Button>{' '}\n                <Button variant=\"info\" onClick={() => setMove('2')}>Water</Button>{' '}\n                <Button variant=\"success\" onClick={() => setMove('3')}>Plant</Button>{' '}\n              </p>\n\n              <Col></Col>\n              <h5>Bet amount</h5>\n              <p>\n                <Button variant=\"outline-dark\" onClick={() => setBetAmounts('200000000000000000')}>0.2 ETH</Button>{' '}\n                <Button variant=\"outline-dark\" onClick={() => setBetAmounts('500000000000000000')}>0.5 ETH</Button>{' '}\n                <Button variant=\"outline-dark\" onClick={() => setBetAmounts('1000000000000000000')}>1.0 ETH</Button>{' '}\n              </p>\n              <p>\n\n                <Button variant=\"danger\" type=\"submit\">Submit Game</Button>{' '}\n                <ModalCentered\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  title={modalTitle}\n                  body={`Playing ${move == 1 ? \"FIRE\" : move == 2 ? \"WATER\" : \"PLANT\"} with a bet of ${betInETH} ETH`}\n                />\n              </p>\n            </Form>\n            </Col>\n            <Col>\n              {(move == 1) ? (<img src={FireImgMED} className=\"thumbnail\" alt=\"\" />) : (move == 2) ? (<img src={WaterImgMED} className=\"thumbnail\" alt=\"\" />) : (<img src={PlantImgMED} className=\"thumbnail\" alt=\"\" />)}\n              <p className=\"h2\">Betting {betInETH} ETH</p>\n            </Col>\n          </Row>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setCreateShow(false)} variant=\"outline-success\" >\n              X\n            </Button>\n          </div>\n        </Alert>\n        {!createShow && <Button variant=\"success\" onClick={() => setCreateShow(true)}>Create Game</Button>}\n      </Jumbotron>\n\n      <Container>\n        <Row>\n          <Col>\n            <h5>Active Games</h5>\n          </Col>\n          <Col>\n          <h5>Completed Games</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          {!isReady() || games.length < 1 ? null :\n            games.slice(0).reverse().map(\n              function(game, index) {\n\n                try {\n                  if(game.state == 1) {\n                    return (\n                      <div key={index}>\n                        <CurrentGames\n                          data={game}\n                          onClickType={value => setMove(value)}\n                          onClickSubmit={(data) => joinGameCallback(data)}\n                        />\n                      <br />\n                      </div>\n                    )\n                  }\n                } catch (e) {\n                  console.log(e);\n                }\n              })\n          }\n          </Col>\n          <Col>\n          {!isReady() || games.length < 1 ? null :\n            games.slice(0).reverse().map(\n              function(game, index) {\n                try {\n                  if(game.state == 3) {\n                    return (\n                      <div key={index}>\n                        <CompletedGames\n                          data={game}\n                        />\n                        <br />\n                      </div>\n                    )\n                  }\n                } catch (e) {\n                  console.log(e);\n                }\n              })\n          }\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () => {\n  return new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://localhost:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n};\n\nexport { getWeb3 };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}